{{>header}}

<style>

/* Style the form container */
.form-container {
  max-width: 600px;
  margin: auto;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

/* Style the form fields */
input[type=text], input[type=email], input[type=tel] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  box-sizing: border-box;
  border: 2px solid #ccc;
  border-radius: 4px;
  background-color: #f8f8f8;
  font-size: 16px;
}

/* Style the submit button */
input[type=submit] {
  background-color: #4CAF50;
  color: white;
  padding: 12px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  float: right;
}

/* Clear floats after the form */
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}



</style>

  {{!-- <link rel="stylesheet" type="text/css"   href="/css/editprofile.css"> --}}
<body>

<div class="form-container" style="margin-top: 50px">
  <h2>Edit Profile</h2>
  <form id="form" action="" method="post">
    <label for="name">Name</label>
    <input type="text" id="name" name="name" value="{{userData.name}}" placeholder="Enter your name" required >


    <label for="email">Email</label>
    <input type="email" id="email" name="email" value="{{userData.email}}" placeholder="Enter your email" readonly>
  

    <label for="mobile">Mobile</label>
    <input type="tel" id="mobile" name="mobile" value="{{userData.mobile}}" placeholder="Enter your mobile number" >
     <div  style="color: red;" class="error"></div>

    <div class="clearfix">
        <input type="hidden" name="id" value="{{userData._id }}"> 
      <input type="submit" value="Save Changes">
      {{!-- <a href="/profile" class="btn btn-success">Go Back</a> --}}
    </div>
    {{!-- sending user id to save --}}
    
  </form>
</div>

</body>
</html>



{{>userfooter}}




<script>

const form = document.getElementById('form')
const name = document.getElementById('name')
const mobile = document.getElementById('mobile')

form.addEventListener('submit', e => {
    e.preventDefault();
    validateInputs();
});



const setError = (element, message) => {
    const inputControl = element.parentElement;
    const errorDisplay = inputControl.querySelector('.error');

    errorDisplay.innerText = message;
    inputControl.classList.add('error');
    inputControl.classList.remove('success')
}

const setSuccess = element => {
    const inputControl = element.parentElement;
    const errorDisplay = inputControl.querySelector('.error');

    errorDisplay.innerText = '';
    inputControl.classList.add('success');
    inputControl.classList.remove('error');
};

const isValidMobile = mobile => {
    const pattern = /^\d{10}$/;
    return pattern.test(mobile);
}


const validateInputs = () => {
    const nameValue = name.value.trim();
    const mobileValue = mobile.value.trim();

    if(nameValue === '') {
        setError(name, 'Name is required');
    } else {
        setSuccess(name);
    }
    

    if(mobileValue === '') {
        setError(mobile, 'Mobile number is required');
    } else if (!isValidMobile(mobileValue)) {
        setError(mobile, 'Provide a valid Mobile Number');
    } else {
        setSuccess(mobile);
    }


    if (name.parentElement.classList.contains('success') && mobile.parentElement.classList.contains('success') ) {
        form.submit();
     }

};


</script>